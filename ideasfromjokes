I write an app generator, goaloc, that compiles from a very terse description of a web application to an actual app.  One of my coworkers jokes that he should just be able to say 

goaloc blog

and be done, with a newly generated blog.  This is obviously silly, except that it isn't.  A large number of apps have very similar featuresets:  photo galleries, blogs, wikis, status update queues, etc.  Code generators like restful-authentication in rails have demonstrated that a full-stack MVC widget has at least some utility, and I believe the concept could be much more useful.  In particular, this sort of component is extremely powerful in the REST world.  REST nominally restricts itself to defining a URI schema, but in practice, it also defines nested parent-child relationships.  If there were a hypothetical blog "goal", it would need nothing other than to know where in the routes it would be situated to be able to generate the code necessary for it to function.  Lots of other things would be equally easy to wire up.  This could allow for a really powerful sort of component-writing, where people write little modules, that can be combined extremely easily by any goaloc-capable client.  In particular, consulting shops should LOVE goaloc, as it would allow them to produce prototypes extremely fast.  

Of course, if Paul Graham's experience with Viaweb is any indicator, consultants will hate goaloc.  