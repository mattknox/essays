Tests don't do very well, emprically, at catching bugs (see chart in Testing is Overrated), but they are pretty nearly universal.  Why?  Is it, as suggested in TiO, that devs can control testing, and they can't control much else?  Or is it that the tests are a sort of dynamic check that continues to have value as a system changes, unlike a proof which needs to be redone?  Or is it that the tests have extrinsic value, as documentation or something else?
