I'm reading domain driven design, and I'm struck by some of the similarities to pg's writing on layered designs in lisp.  What I find interesting is how much less formal pg's presentation of ideas was-he doesn't feel the need to make terms that are always in a different typeface, and usually is able to pick combinations of words that serve as his terms of art.  But the two of them seem to agree on the importance of continuous change and a language that is bent to serve the domain to be modeled.
